cppRPG features&ideas

-? = maybe
→ = choice

Skills:
- pointer to constructors (hard coded)
- Basic skills for every class + learn later on
- Non-combat skill (e.g. for profession)
- scalar
- skilltree

	- lvl 10: scalar with some choices
	- choice of skilltree
	- lvl 40: skilltree
	- choice of specialisation
	- choice of skilltree

filestructure:
Warrior~Mage~Rouge vector
0:Fist Attack ->root-tree 					//#:relativ lvl to start of tree
5:Bash~Defend ->1. branch decision
8:Ruin Game ->2. branch
10:tree1~tree2~tree3 -> next tree specialisation
0:1~2|34| -> 1. branch
5|3~4
7|8|9
|6~123~10| etc.
10: Warrior -> next tree specialisation

Professions:
- e.g. smith, cook, enchanter
- can be leveled
- needs buyable and findable ingredients

Classes:
- some base classes + custom ✓
- restricts weapon and armor classes (?bonus/penalty for different classes) ✓
- Damage attribute for different skills/items  (int for mages, agi for small weapons, str for heavy weapons)
- sets attribute growth rate (e.g. +3 str for warrior per level, but only +1 int)
- sets attribute bonus and penalties (warriors start with less int than a mage)
- Specialisations

filestructure: ✓
[Mage]
intelligence=2
skilltrees=Mage  //optional
[warrior] etc.

Races:
- sets attribute bonus and penalties (orcs start with less int than humans) ✓
-? sets extra bonuses (humans need less xp, elves regen faster etc.)

Items:
- armors slots: head, hands, breast, legs, feet
- level/attribute requirements
- active skills
- armor classes (light, medium, heavy)
- weapon slots: main hand, off hand, two handed
- weight (no equipped exhaustion)

Quests:
-? hook bases (certain actions emit signals with metadata that can be subscribed to by quests, which can track their progress with the metadata)
→ Global or user specific?
→ World progress or user progress?

Misc.:
-? Groups, Dungeons, Raids
- Open world
→ Respawn of enemies and items?
→ realtime, turn-based, both?
→ MMO or single rooms?
- rpg elements (interaction with environment)
